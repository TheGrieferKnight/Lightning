name: 'publish'
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf
          
      - name: install frontend dependencies
        run: npm ci --force
        
      - name: build tauri app (no release)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Don't create release automatically
          tagName: ''
          releaseName: ''
          releaseBody: ''
          releaseDraft: true
          prerelease: false
          
      - name: Upload Windows installer
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: src-tauri/target/release/bundle/msi/*.msi
          retention-days: 1
          
      - name: Upload Linux installers
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installers
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/appimage/*.AppImage
          retention-days: 1
          
      - name: Upload macOS installer
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: src-tauri/target/release/bundle/dmg/*.dmg
          retention-days: 1
          
  publish:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-msi
          path: ./release-assets/
          
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-installers
          path: ./release-assets/
          
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-dmg
          path: ./release-assets/
          
      - name: Display release assets
        run: ls -la ./release-assets/
        
      - name: Create release with essential files only
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: 'Lightning ${{ github.ref_name }}'
          body: |
            ## Installation
            
            **Windows**: Download and run the `.msi` file
            **Linux**: Download the `.deb` file for Debian/Ubuntu or the `.AppImage` for universal Linux
            **macOS**: Download and install the `.dmg` file
            
            ## What's Changed
            See the commits for detailed changes.
          draft: false
          prerelease: false
          files: ./release-assets/*
          token: ${{ secrets.GITHUB_TOKEN }}
